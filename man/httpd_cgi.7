.\"
.\"
.\" $Id$
.\" Written by Janjaap van Velthooven based on the original manpage
.Dd May 9, 2007
.Dt HTTPD_CGI 7
.Os xs-httpd/3.5
.Sh NAME
.Nm httpd_cgi
Common Gateway Interface (CGI) for xs\-httpd
.Sh DESCRIPTION
The WWW server supports running system and user CGI binaries.
This means any user can run their own CGI binaries.
Any CGI binary runnig for a user run as the user.
As a consequence these CGI binaries are allowed to read, write,
update and delete files owned or accessable by the user.
.Pp
CGI binaries must be in the directory named
.Pa cgi-bin
which must be in either the WWW server's virtual root, or
in the user's WWW directory (see the local configuration
section about a user directories).
CGI binaries may also be in subdirectories of the
.Pa cgi-bin
directory.
It is also possible to run CGI binaries outside this directory,
see the
.Xr xsscripts 5
configuration file documentation.
.Pp
CGI binaries can be written in any language, as long as it is
installed as an executable program on the webserver machine.
Scripting in shell languages, PHP or Perl is common, but compiled
programs can be used just as well. It is important that the
executable bit (chmod u+x) is set for a CGI binary.
.Pp
The CGI binary should output HTTP headers and content,
seperated by an empty line. The following headers are
frequently set by CGI binaries
.Bl -tag -width Ds -compact
.It Li Content-type:
used to determine the type of content. Common values include
.Sq text/plain
and
.Sq image/png .
The default is
.Sq text/html
when this header is not set.
.It Li Status:
will be used to generate the HTTP response code. Should only
be set when generating an error message, otherwise it will
default to
.Sq 200\ OK .
.It Li Location:
sets the URL to which the client should be redirected. When
setting a location header, the HTTP status code will default
to
.Sq 302\ Moved .
.El
.Pp
Note that a CGI script may omit all headers and let the
server automatically generates sensible defaults. In this
case the output of the CGI script should start with an empty
line.
.Pp
A CGI must be able to read its arguments from the correct place.
If the request method is
.Sy GET
then arguments will be included in the environment variable
.Ev QUERY_STRING ,
but on a
.Sy POST
request the user data must be read from standard input.
When handling a
.Sy HEAD
request, only the headers must be written and no body content.
.Pp
By default the headers generated by a CGI script will be parsed
by the server and any missing headers will be added.
However to give the author full control, it is possible to let
the script output all headers. If the name of the CGI binary
starts with
.Ql nph-
(no parse headers) then the server won't do any header
validation.
It is generally not a good idea to use nph, unless you really
know what you are doing.
.Pp
By default the output of a CGI script is not parsed for
server-side includes.
Usually there is no point, because CGI allows you to do all
the fancy stuff SSI offers and more but for some features (like
the built-in counters) parsing may be desired.
If the name of the CGI binary starts with
.Ql ssi-
then the output will be parsed.
.Pp
There is one special purpose CGI binary
.Pa error
which, if it exists, gets called in case of an HTTP error
(404, 403, ..).
Users can have their own personal error CGI binary.
If a user has a personal error CGI binary it will be called
in case an error occurs on a request pertaining to that user.
Extra environment variables that describe the situation,
will be available to this error script (see below).
.Sh ENVIRONMENT VARIABLES
The server sets the following environment variables for a
CGI binary:
.Bl -tag -width Ds
.It Ev GATEWAY_INTERFACE
The revision of the CGI specification to which this server
complies.
Format: CGI/revision
.It Ev SERVER_SOFTWARE
The name and version of the httpd that started the binary.
Format: xs-httpd/version branch/subversion ...
.It Ev SERVER_PROTOCOL
The name and revision of the information protcol this request
came in with.
Format: protocol/revision
.It Ev SERVER_NAME
The server's hostname, DNS alias, or IP address as it would
appear in self-referencing URLs.
.It Ev SERVER_PORT
The port number the request was sent to (usually 80).
.It Ev REQUEST_METHOD
The method with which the request was made.
For
.Sy HTTP ,
this can be
.Sq Sy GET ,
.Sq Sy HEAD ,
.Sq Sy POST ,
etc.
.It Ev REDIRECT_STATUS
The return status of the request. 
This should always be 200 for normal CGI binaries.
Some php tools rely on this.
.It Ev PATH_INFO
The extra path information, as given by the client.
In other words, scripts can be accessed by their virtual pathname,
followed by extra information at the end of this path.
The extra information is sent as PATH_INFO.
This information is decoded by the server if it comes from a URL
before it is passed to the CGI script.
.It Ev PATH_TRANSLATED
The server provides a translated version of PATH_INFO, which takes
the path and does any virtual-to-physical mapping to it.
.It Ev SCRIPT_NAME
A virtual path to the script being executed, used for
self-referencing URLs.
.It Ev QUERY_STRING
The information which follows the
.Ql \&?
in the URL which referenced this script.
This is the query information.
It will not be decoded in any fashion.
This variable is always set when there is query information,
regardless of command line decoding.
.It Ev REMOTE_HOST
The hostname making the request.
If the server does not have this information, it will set
.Ev REMOTE_ADDR
and leave this unset.
.It Ev REMOTE_ADDR
The IP address in text of the remote host making the request.
See also
.Ev HTTP_CLIENT_IP
and
.Ev HTTP_VIA .
.It Ev AUTH_TYPE
If the server supports user authentication, and the script is
protected, this is the protocol-specific authentication method
used to validate the user.
.It Ev REMOTE_USER
If the the script is protected, this is the username the remote
user has authenticated with.
.It Ev REMOTE_PASSWORD
If the the script is protected with basic authentication,
this is the password the remote user used.
.It Ev CONTENT_TYPE
For queries which have attached information, such as
.Sy HTTP
.Sy POST
and
.Sy PUT
requests, this is the content type of the data.
.It Ev CONTENT_LENGTH
The length of the content as given by the client.
.El
.Pp
Whenever a connection is made using a secure SSL or TLS transport,
the following environment variables will also be made available:
.Pp
.Bl -tag -width Ds -compact
.It Ev HTTPS
Set to
.Ql on
whenever the connection uses secure SSL or TLS transport.
This can be used to check if a connection is encrypted.
.Pp
.It Ev SSL_CIPHER
The cipher used for encryption via SSL or TLS.
.Pp
.It Ev SSL_CLIENT_S_DN
The
.Sy Distinguished Name
of the
.Sy subject
of the client certificate.
This variable contains all information available about the user.
.Pp
.It Ev SSL_CLIENT_S_DN_CN
The
.Sy Common Name
of the 
.Sy subject.
This is a part of SSL_CLIENT_S_DN and gives the name that can be
used to identify the certificate user.
This should always be present in client certificates.
.Pp
.It Ev SSL_CLIENT_S_DN_Email
The email address of the subject.
This is an optional part of SSL_CLIENT_S_DN and may not always
be available.
.Pp
.It Ev SSL_CLIENT_I_DN
.It Ev SSL_CLIENT_I_DN_CN
.It Ev SSL_CLIENT_I_DN_Email
The
.Sy Distinguished Name ,
.Sy Common Name
and email address respectively of the
.Sy issuer
of the client certificate.
These contain information available about the organisation that
signed the certificate for this user.
.Pp
.El
In addition to the aforementioned CGI environment variables a variable
of the form
.Ev HTTP_ Ns Ar header
will be generated for each header in the request.
Common header generated CGI environment variables include
.Ev HTTP_REFERER ,
.Ev HTTP_COOKIE ,
.Ev HTTP_HOST 
and
.Ev HTTP_ACCEPT .
.Pp
In the case that the CGI is called as the error CGI, the following
environment variables describing the error condition are also set:
.Bl -tag -width Ds
.It Ev ERROR_CODE
depending on the error this variable is set to one of the following
values:
.Bl -tag -width Ds -compact
.It Sq Sy NOT_FOUND
The requested file cannot be found.
.It Sq Sy NOT_AVAILABLE
The (filesystem) permission deny access to the file.
.It Sq Sy USER_UNKNOWN
The specified user is  not known.
.It Sq Sy BAD_REQUEST
The client sent a request that cannot be processed by the server.
.It Sq Sy METHOD_NOT_ALLOWED
A 
.Sy POST
request was attempted to a non-CGI binary.
.It Sq Sy PRECONDITION_FAILED
The client sent a conditional request (If-...) dor which the
condition is not met.
.El
.It Ev ERROR_READABLE
This variable contains the text that the server would normally
send to the remote client.
This can be used in case you do not want to genereate your own
error message.
.It Ev ERROR_URL
The URL that was requested (without the server name) when the
error occurred.
.It Ev ERROR_URL_EXPANDED
The full pathname of the file on disk that is associated with
the request.
.It Ev ERROR_URL_ESCAPED
A HTML-escaped representation of the ERROR_URL value. 
The
.Sq < ,
.Sq >
and
.Sq &
are replaced with their SGML entities so the variable can be 
shown in a HTML page.
.El
.Sh SEE ALSO
.Xr httpd 1
.Pp
The project homepage:
.Pa http://www.stack.nl/xs\-httpd/
.Sh STANDARDS
.Rs
.%R RFC 3875
.%T The Common Gateway Interface (CGI) Version 1.1
.%D October 2004
.Re
